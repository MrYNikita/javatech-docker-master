version: "3"

volumes:
  postgres-data-volume:
    driver: local

services:

  # TODO сервис nginx на локальном порту 22000, смапить nginx-data/upstreams.conf в /etc/nginx/conf.d/upstreams.conf

  nginx:
    image: nginx:1.17.2
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/tec/nginx/conf.d/default.conf
      - ./nginx-data/upstreams.conf:/tec/nginx/conf.d/upstreams.conf
    networks: 
        - app_net
  
  postgres:
    container_name: postgres.service
    build:
      context: postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: example
    ports:
      - 22001:5432
    volumes:
      - postgres-data-volume:/var/lib/postgresql/data
    networks: 
        - app_net

  frontend:
    container_name: frontend.service
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - 22002:3000
    volumes:
      - ./frontend/:/app/
    networks: 
        - app_net

  backend1:
    container_name: backend1.service
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - 22003:7000
    volumes:
      - ./backend/src/:/source/
      - ./backend1-data/application.properties:/app/application.properties

    networks: 
        - app_net

  backend2:
    container_name: backend2.service
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - 22004:7000
    volumes:
      - ./backend/src/:/source/
      - ./backend2-data/application.properties:/app/application.properties
    networks: 
        - app_net

networks:
    app_net:
        driver: "bridge"

  # TODO сервис backend2 на локальном порту 22004, внешний конфиг взять из backend2-data
